name: fishbait

services:
  nginx:
    image: nginx:1.27
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - app-build:/usr/share/nginx/html:ro
    depends_on:
      app:
        condition: service_completed_successfully
      api:
        condition: service_started
    restart: always

  ai:
    build:
      context: ./ai
      args:
        MAX_THREADS: ${MAX_THREADS:-1}
    image: fishbait-ai
    volumes:
      - lib:/libvol
    command: ["sh", "-c", "cp -r /build/lib /libvol"]

  api:
    build:
      context: ./api
    image: fishbait-api
    environment:
      - STRATEGY_LOCATION=/strategy.hdf
      - RELAY_LIB_LOCATION=/libvol/lib/librelay.so
      - SESSION_TIMEOUT=${SESSION_TIMEOUT:-86400}
      - PIGEON_EXECUTION_TIMEOUT=${PIGEON_EXECUTION_TIMEOUT:-5}
      - DD_AGENT_HOST=datadog-agent
      - DD_SERVICE=fishbait-api
      - DD_ENV=${DD_ENV}
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    depends_on:
      ai:
        condition: service_completed_successfully
      worker:
        condition: service_started
      redis:
        condition: service_started
      datadog-agent:
        condition: service_started
    volumes:
      - lib:/libvol
      - ./api/src:/api/src
      - ${STRATEGY_LOCATION}:/strategy.hdf:ro
    command: ["/api/entrypoints/api.prod.sh"]
    restart: always

  worker:
    build:
      context: ./api
    image: fishbait-api
    environment:
      - STRATEGY_LOCATION=/strategy.hdf
      - RELAY_LIB_LOCATION=/libvol/lib/librelay.so
      - SESSION_TIMEOUT=${SESSION_TIMEOUT:-86400}
      - PIGEON_EXECUTION_TIMEOUT=${PIGEON_EXECUTION_TIMEOUT:-5}
      - DD_AGENT_HOST=datadog-agent
      - DD_SERVICE=fishbait-worker
      - DD_ENV=${DD_ENV}
      - DD_LOGS_INJECTION=true
      - DD_PROFILING_ENABLED=true
      - DD_APPSEC_ENABLED=true
    depends_on:
      ai:
        condition: service_completed_successfully
      redis:
        condition: service_started
      datadog-agent:
        condition: service_started
    user: "1000:1000"
    volumes:
      - lib:/libvol
      - ./api/src:/api/src
      - ${STRATEGY_LOCATION}:/strategy.hdf:ro
    command: ["/api/entrypoints/worker.prod.sh"]
    restart: always

  app:
    build:
      context: ./app
    image: fishbait-app
    volumes:
      - app-build:/app/build
    command: ["yarn", "build"]

  redis:
    image: redis:7.4.1
    command:
      - sh
      - -c
      - |
        redis-server \
          --maxmemory ${REDIS_MAXMEMORY:-256mb} \
          --maxmemory-policy volatile-lru
    restart: always

  datadog-agent:
    image: "datadog/agent:7"
    environment:
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_LOGS_ENABLED=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_USE_DOGSTATSD=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always

volumes:
  lib:
  app-build:
